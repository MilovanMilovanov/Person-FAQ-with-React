{"version":3,"sources":["Header.js","FAQ.js","App.js","reportWebVitals.js","index.js"],"names":["Header","titleColor","title","className","FAQ","faq","index","toggleQA","toggleTitleColor","open","onClick","answer","App","useState","QA","setQA","setTitleColor","map","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uKAOeA,MALf,YAAiC,IAAfC,EAAc,EAAdA,WACRC,EAAQ,sBAAMC,UAAWF,EAAa,QAAU,GAAxC,mBACd,OAAO,2CAAcC,EAAd,eCcIE,MAhBf,YAA0D,IAA3CC,EAA0C,EAA1CA,IAAKC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,iBACjC,OACI,sBACIL,UAAW,QAAUE,EAAII,KAAO,OAAS,IACzCC,QAAS,WACLH,EAASD,GACTE,EAAiBH,IAJzB,UAQI,oBAAIF,UAAW,eAAf,SAAgCE,EAAIH,QACpC,qBAAKC,UAAW,aAAhB,SAA+BE,EAAIM,WAH9BL,ICsCFM,MA1Cf,WACI,MAAoBC,mBAAS,CACzB,CAAEX,MAAO,4BAA6BS,OAAQ,2GAA4GF,MAAM,GAChK,CAAEP,MAAO,iCAAkCS,OAAQ,wGAA0GF,MAAM,GACnK,CAAEP,MAAO,0BAA2BS,OAAQ,+CAAgDF,MAAM,GAClG,CAAEP,MAAO,2BAA4BS,OAAQ,sGAAwGF,MAAM,GAC3J,CAAEP,MAAO,8BAA+BS,OAAQ,0EAA2EF,MAAM,GACjI,CAAEP,MAAO,4BAA6BS,OAAQ,4FAA8FF,MAAM,KANtJ,mBAAOK,EAAP,KAAWC,EAAX,KASA,EAA+BF,oBAAS,GAAxC,mBAAOX,EAAP,KAAcc,EAAd,KAEMR,EAAmB,SAAAH,GACrBA,EAAII,KAAOO,GAAc,GAAQA,GAAc,IAG7CT,EAAW,SAAAD,GACbS,EAAMD,EAAGG,KAAI,SAACZ,EAAKa,GAMf,OAJIb,EAAII,KADJH,IAAUY,IACEb,EAAII,KAIbJ,OAIf,OACI,sBAAKF,UAAU,MAAf,UACI,cAAC,EAAD,CAAQF,WAAYC,IACnBY,EAAGG,KAAI,SAACZ,EAAKC,GACV,OACI,qBAAKH,UAAU,OAAf,SACI,cAAC,EAAD,CAAKE,IAAKA,EAAKC,MAAOA,EAAOC,SAAUA,EAAUC,iBAAkBA,KAD5CF,UC1BhCa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.0d76255d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header({ titleColor }) {\r\n    const title = <span className={titleColor ? 'react' : ''}>React</span>;\r\n    return <h1>My first {title} project</h1>\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\n\r\nfunction FAQ({ faq, index, toggleQA, toggleTitleColor }) {\r\n    return (\r\n        <div\r\n            className={'faq ' + (faq.open ? 'open' : '')}\r\n            onClick={() => {\r\n                toggleQA(index);\r\n                toggleTitleColor(faq);\r\n            }}\r\n            key={index}\r\n        >\r\n            <h3 className={'faq-question'}>{faq.title}</h3>\r\n            <div className={'faq-answer'}>{faq.answer}</div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default FAQ\r\n","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Header from './Header'\r\nimport FAQ from './FAQ';\r\n\r\n\r\nfunction App() {\r\n    const [QA, setQA] = useState([\r\n        { title: 'When did you learn React?', answer: 'I watched 4 hour introduction course on the day i received the email with the task, to prepare myself :)', open: false },\r\n        { title: 'Why did you choose JavaScript?', answer: 'It gives me the freedom to mix my creative background with engineering, which i\\'m very keen to learn.', open: false },\r\n        { title: 'Do you like challenges?', answer: 'I certainly do and this is a small sample :)', open: false },\r\n        { title: 'What is your motivation?', answer: 'I take pride in everything i do, as i\\'m result driven person, that motivates me to get things done!', open: false },\r\n        { title: 'What do you expect from us?', answer: 'Possibilities, that will put me in a position to grow and nothing less!', open: false },\r\n        { title: 'Any final message for us?', answer: 'I enjoyed the process of creating this task, and i\\'m looking forward to the next step :)!', open: false }\r\n    ]);\r\n\r\n    const [title, setTitleColor] = useState(false);\r\n\r\n    const toggleTitleColor = faq => {\r\n        faq.open ? setTitleColor(true) : setTitleColor(false);\r\n    }\r\n\r\n    const toggleQA = index => {\r\n        setQA(QA.map((faq, i) => {\r\n            if (index === i) {\r\n                faq.open = !faq.open;\r\n            } else {\r\n                faq.open = false;\r\n            }\r\n            return faq;\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Header titleColor={title} />\r\n            {QA.map((faq, index) => {\r\n                return (\r\n                    <div className=\"faqs\" key={index}>\r\n                        <FAQ faq={faq} index={index} toggleQA={toggleQA} toggleTitleColor={toggleTitleColor} />\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}